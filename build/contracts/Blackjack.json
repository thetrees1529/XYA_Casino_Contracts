{
  "contractName": "Blackjack",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Blackjack.sol\":\"Blackjack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"luk1529_solidity/contracts/utils/Random.sol\":{\"keccak256\":\"0x105f1630f92f24b8d7c14026b49fc39abcc492aa3bed95867c72e8140e9527b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf5a1c2459d5e4e53b213981900a0baf69ddd7c2ef5ebf0db28e38b68c904af\",\"dweb:/ipfs/QmYEtmY2ZkLWW3v7YVUWeDXXMjU73ABwJKGMWgNWMZ5QV3\"]},\"project:/contracts/Blackjack.sol\":{\"keccak256\":\"0x921a4afdeb653562f298d47de4e1fe3585c6732747f1e2a52a9caaadaddec1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef5f493a9740e6178f33893765481e116c3e2969cbd43b0cf47c18e3aa44d94\",\"dweb:/ipfs/QmTmkcNkTyxEFKSnB32TcaDrHiMGGe5UZdNuWoA2bPrKad\"]},\"project:/contracts/card/CardGame.sol\":{\"keccak256\":\"0xa177529f7aa1703fa7111bd9df911b0e3549da693613715e07ccf5fc9fc4e5c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5fea232d7ef4fe7391cfac8e78778ba9062f8e1cb15e70b69192a4c4fca6ca1\",\"dweb:/ipfs/QmS4QMC9ZzUkavBUN4tw7dGqU7kc1qDZMxmqwktgcVvRye\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600a81526020017f6361726479776172647900000000000000000000000000000000000000000000815250806001908051906020019061005d9291906101aa565b505060005b6003808111156100755761007461024d565b5b81116101a45760005b600c808111156100915761009061024d565b5b811161019057600260405180604001604052808460038111156100b7576100b661024d565b5b60038111156100c9576100c861024d565b5b815260200183600c8111156100e1576100e061024d565b5b600c8111156100f3576100f261024d565b5b8152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548160ff021916908360038111156101465761014561024d565b5b021790555060208201518160000160016101000a81548160ff0219169083600c8111156101765761017561024d565b5b021790555050508080610188906102b5565b91505061007e565b50808061019c906102b5565b915050610062565b5061035f565b8280546101b69061032d565b90600052602060002090601f0160209004810192826101d8576000855561021f565b82601f106101f157805160ff191683800117855561021f565b8280016001018555821561021f579182015b8281111561021e578251825591602001919060010190610203565b5b50905061022c9190610230565b5090565b5b80821115610249576000816000905550600101610231565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006102c0826102ab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102f3576102f261027c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061034557607f821691505b60208210811415610359576103586102fe565b5b50919050565b603f8061036d6000396000f3fe6080604052600080fdfea26469706673582212203aa60108aa3f597e6c5fc8391023644606581b03a6d5da93577caff034d6416564736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600080fdfea26469706673582212203aa60108aa3f597e6c5fc8391023644606581b03a6d5da93577caff034d6416564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1210:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:12",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:12"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "221:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "238:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "241:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "231:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "231:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "335:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "338:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "328:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "328:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "359:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "362:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "193:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "424:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "434:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "445:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "434:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "406:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "416:7:12",
                "type": ""
              }
            ],
            "src": "379:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "505:190:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "515:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "542:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "524:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "640:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "640:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "640:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "570:66:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "560:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:77:12"
                  },
                  "nodeType": "YulIf",
                  "src": "557:103:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "669:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "680:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "687:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "676:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "669:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "491:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "501:3:12",
                "type": ""
              }
            ],
            "src": "462:233:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "729:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "746:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "749:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "739:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "739:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "739:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "843:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "846:4:12",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "836:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "836:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "867:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "870:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "860:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "860:15:12"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "701:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:269:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "962:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:1:12",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "979:38:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1009:4:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1015:1:12",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1005:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1005:12:12"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "983:18:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1056:51:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1070:27:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1084:6:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1092:4:12",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1080:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1080:17:12"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1070:6:12"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1036:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1029:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1029:26:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1026:81:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1159:42:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1173:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1173:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1173:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1123:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1154:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1143:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1143:14:12"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1120:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1120:38:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1117:84:12"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "922:4:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "931:6:12",
                "type": ""
              }
            ],
            "src": "887:320:12"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "92:41:6:-:0;;;;;;;;;;;;;108:59:5;;;;;;;;;;;;;;;;;156:5;149:4;:12;;;;;;;;;;;;:::i;:::-;;108:59;194:6:11;190:188;212:11;207:17;;;;;;;;:::i;:::-;;202:1;:22;190:188;;251:6;247:120;269:10;264:16;;;;;;;;:::i;:::-;;259:1;:21;247:120;;307:14;327:23;;;;;;;;337:1;332:7;;;;;;;;:::i;:::-;;327:23;;;;;;;;:::i;:::-;;;;;;347:1;341:8;;;;;;;;:::i;:::-;;327:23;;;;;;;;:::i;:::-;;;;;307:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;282:4;;;;;:::i;:::-;;;;247:120;;;;226:4;;;;;:::i;:::-;;;;190:188;;;;92:41:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:12:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:180;241:77;238:1;231:88;338:4;335:1;328:15;362:4;359:1;352:15;379:77;416:7;445:5;434:16;;379:77;;;:::o;462:233::-;501:3;524:24;542:5;524:24;:::i;:::-;515:33;;570:66;563:5;560:77;557:103;;;640:18;;:::i;:::-;557:103;687:1;680:5;676:13;669:20;;462:233;;;:::o;701:180::-;749:77;746:1;739:88;846:4;843:1;836:15;870:4;867:1;860:15;887:320;931:6;968:1;962:4;958:12;948:22;;1015:1;1009:4;1005:12;1036:18;1026:81;;1092:4;1084:6;1080:17;1070:27;;1026:81;1154:2;1146:6;1143:14;1123:18;1120:38;1117:84;;;1173:18;;:::i;:::-;1117:84;938:269;887:320;;;:::o;92:41:6:-;;;;;;;",
  "deployedSourceMap": "92:41:6:-:0;;;;;",
  "source": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\nimport \"./card/CardGame.sol\";\r\n\r\ncontract Blackjack is CardGame {\r\n    \r\n}",
  "sourcePath": "C:\\Users\\lukey\\Documents\\Blockchain\\XYA\\Casino\\contracts\\Blackjack.sol",
  "ast": {
    "absolutePath": "project:/contracts/Blackjack.sol",
    "exportedSymbols": {
      "Blackjack": [
        817
      ],
      "CardGame": [
        3041
      ],
      "Random": [
        811
      ]
    },
    "id": 818,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 813,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:6"
      },
      {
        "absolutePath": "project:/contracts/card/CardGame.sol",
        "file": "./card/CardGame.sol",
        "id": 814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 818,
        "sourceUnit": 3042,
        "src": "59:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 815,
              "name": "CardGame",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3041,
              "src": "114:8:6"
            },
            "id": 816,
            "nodeType": "InheritanceSpecifier",
            "src": "114:8:6"
          }
        ],
        "canonicalName": "Blackjack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 817,
        "linearizedBaseContracts": [
          817,
          3041,
          811
        ],
        "name": "Blackjack",
        "nameLocation": "101:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 818,
        "src": "92:41:6",
        "usedErrors": []
      }
    ],
    "src": "34:99:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Blackjack.sol",
    "exportedSymbols": {
      "Blackjack": [
        817
      ],
      "CardGame": [
        3041
      ],
      "Random": [
        811
      ]
    },
    "id": 818,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 813,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:6"
      },
      {
        "absolutePath": "project:/contracts/card/CardGame.sol",
        "file": "./card/CardGame.sol",
        "id": 814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 818,
        "sourceUnit": 3042,
        "src": "59:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 815,
              "name": "CardGame",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3041,
              "src": "114:8:6"
            },
            "id": 816,
            "nodeType": "InheritanceSpecifier",
            "src": "114:8:6"
          }
        ],
        "canonicalName": "Blackjack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 817,
        "linearizedBaseContracts": [
          817,
          3041,
          811
        ],
        "name": "Blackjack",
        "nameLocation": "101:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 818,
        "src": "92:41:6",
        "usedErrors": []
      }
    ],
    "src": "34:99:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-28T16:56:06.794Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}